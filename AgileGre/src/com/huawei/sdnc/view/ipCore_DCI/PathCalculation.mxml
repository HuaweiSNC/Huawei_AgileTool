<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="380" height="182" 
		 fontFamily="微软雅黑"
		 keyUp="onKeyUp(event)"
		 creationComplete="init(event)">
	<fx:Script>
		<![CDATA[
			import com.huawei.sdnc.controller.ipCoreController.PingPath;
			import com.huawei.sdnc.event.SdncEvt;
			import com.huawei.sdnc.model.Device;
			import com.huawei.sdnc.netmanage.model.NetPlanner;
			import com.huawei.sdnc.tools.SdncUtil;
			import com.huawei.sdnc.view.common.node.StateNode;
			import com.huawei.sdnc.view.ipCore_DCI.dataHandle.DataHandleTool;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import twaver.IData;
			import twaver.IElement;
			import twaver.Styles;
			private var __app:sdncui2;
			private var deviceList:ArrayCollection;
			public var element:IElement;
			//初始化将所有设备的名称--ip 作为下拉框的数据源
			protected function init(event:FlexEvent):void
			{
				__app= SdncUtil.app;
				deviceList = new ArrayCollection(DataHandleTool.devices);
				srcIp.dataProvider=deviceList;
				desIp.dataProvider=deviceList;
				if(element!=null){
					var sn:StateNode=element as StateNode;
					var id:String=sn.getClient("id");
					for(var i:int=0;i<deviceList.length;i++){
						var device:Object=deviceList.getItemAt(i);
						var deviceId:String=device.id;
						if(id==deviceId){
							srcIp.selectedIndex=i;
							break;
						}
					}
				}
			}
			//将源地址，目的之地的数据封装后，发送给计算路径的方法，并在改方法中将线标绿
			protected function savePathCalc(event:MouseEvent):void
			{
				var lefti:String=srcIp.selectedItem["id"];
				var righti:String=desIp.selectedItem["id"];
				var netPlanner:NetPlanner=new NetPlanner;
				netPlanner.srcNodeID=Number(lefti);
				netPlanner.dstNodeID=Number(righti);
				__app.ipcore.physicsView.networkX.elementBox.forEachByBreadthFirst(function(item:IData):void{
					if(item is MyLink){
						var link:MyLink = item as MyLink;
						link.setStyle(Styles.LINK_COLOR, 0x60c6fb);
						link.name="";
					}
				});
				var ping:PingPath = new PingPath;
				ping.signPingPath(netPlanner,__app.ipcore.physicsView.networkX);
				__app.dispatchEvent(new SdncEvt(SdncEvt.CLOSE_PATH_CALCULATION));
			}
			
			public function beginDrag(e:MouseEvent):void
			{
				var re:Rectangle=new Rectangle(0,0,Capabilities.screenResolutionX,Capabilities.screenResolutionY);
				this.startDrag(false,re);
			}
			public function endDrag(e:MouseEvent):void
			{
				this.stopDrag();
			}
			protected function onKeyUp(event:KeyboardEvent):void
			{
				// TODO Auto-generated method stub
				if(event.keyCode==Keyboard.ESCAPE){
					__app.dispatchEvent(new SdncEvt(SdncEvt.CLOSE_PATH_CALCULATION));
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:GlowFilter id="glow" color="0xffffff"/>
	</fx:Declarations>
	<s:Rect width="100%" height="100%" >
		<s:fill>
			<s:SolidColor color="0xcccccc" alpha=".9"/>
		</s:fill>
	</s:Rect>
	<s:RectangularDropShadow blurX="20" blurY="20" width="100%" height="100%"
							 alpha="0.32" distance="11"
							 blRadius="0" brRadius="0"
							 angle="90" color="#000000" left="0" top="0" right="0"
							 bottom="0" />
	<s:VGroup height="100%" width="100%" gap="5">
		<s:Group id="titlelayer" width="100%" height="15%" left="0"  mouseDown="beginDrag(event)" mouseUp="endDrag(event)">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:LinearGradient>
						<s:GradientEntry color="0x3276b7"/>
						<s:GradientEntry color="0x4489ca"/>
					</s:LinearGradient>
				</s:fill>
			</s:Rect>
			<s:Label text="路径计算" color="0xf9f3f3" fontWeight="bold" verticalCenter="0" left="10" fontSize="16"/>
			<s:Image id="cbtn" source="@Embed('assets/imgs/ipran/close.png')" verticalCenter="0" right="15" 
					 buttonMode="true" mouseOver="cbtn.filters=[glow]" mouseOut="cbtn.filters=null"	click="__app.dispatchEvent(new SdncEvt(SdncEvt.CLOSE_PATH_CALCULATION))"/>
		</s:Group>
		<s:Group width="100%" height="70%">
			<s:BorderContainer id="bcc"  width="95%" height="100%"    horizontalCenter="0"  >
				<s:Group width="100%" height="32" x="0" y="13">
					<s:Label text="   源地址 ："  x="46" y="14" textAlign="right"/>
					<s:ComboBox  id="srcIp" x="125" y="7" width="130" labelField="devicename"/>
				</s:Group>
				<s:Group width="100%" height="33" x="0" y="63">
					<s:Label  text="目的地址 ："  x="46" y="14" textAlign="right"/>
					<s:ComboBox id="desIp" x="125" y="7" width="130" labelField="devicename"/>
				</s:Group>
			</s:BorderContainer>
		</s:Group>
		
		<s:Group width="100%" height="15%" >
			<s:HGroup horizontalCenter="0" verticalCenter="0">
				<s:Button id="addnetman" bottom="15" label="确定" click="savePathCalc(event)"  horizontalCenter="-52"/>
				<s:Button bottom="15" label="取消" click="__app.dispatchEvent(new SdncEvt(SdncEvt.CLOSE_PATH_CALCULATION))" horizontalCenter="50"/>
			</s:HGroup>
		</s:Group>
		
	</s:VGroup>
	
	
</s:Group>
