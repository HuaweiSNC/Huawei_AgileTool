<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 color="0xffffff" xmlns:common="com.huawei.sdnc.view.common.*" 
		 xmlns:navpanel="com.huawei.sdnc.view.common.navpanel.*"
		 creationComplete="init()"
		 >
	
	<fx:Script>
		<![CDATA[
			import com.greensock.TweenMax;
			import com.huawei.sdnc.event.SdncEvt;
			import com.huawei.sdnc.model.Device;
			import com.huawei.sdnc.model.QosItem;
			import com.huawei.sdnc.netmanage.model.datas;
			import com.huawei.sdnc.netmanage.controller.SignPath;
			import com.huawei.sdnc.tools.SdncUtil;
			import com.huawei.sdnc.view.common.node.StateNode;
			import com.huawei.sdnc.view.ipCore_DCI.dataHandle.DataHandleTool;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			import twaver.IData;
			import twaver.networkx.NetworkX;
			[Bindable]
			private var arr:ArrayCollection=new ArrayCollection;
			[Bindable]
			public var mydata:datas = datas.getInstence();
			public var network:NetworkX;
			/**展开状态,true为展开，false为未展开*/
			private var __isExtended:Boolean;
			private var __app:sdncui2;
			protected function init():void
			{
				__app=SdncUtil.app;
				arr = mydata.Alpueue;
				network=__app.ipcore.netManageView.networkX
			}
			
			protected function doClickHandler(event:MouseEvent):void
			{
				if(__isExtended)
				{
					__isExtended = false;
					TweenMax.to(this,0.6,{x:-this.width + 25});
					openBtn.rotation = 180;
				}else
				{
					__isExtended = true;
					TweenMax.to(this,0.6,{x:0});
					openBtn.rotation = 0; 
					arr = mydata.Alpueue
					//refreshFlowList();
				}
				
			}
			/**
			 * 刷新流列表
			 * 
			 */
	//		public function refreshFlowList():void
//			{
//				if(SdncUtil.cuProjectType=="test"){
//					var beginPolicyes:Array=[];
//					network = __app.ipcore.physicsView.networkX;
//					network.elementBox.forEachByBreadthFirst(function(item:IData):void{
//						if(item is StateNode){
//							var policyes:Array=item.getClient("policyes");
//							for each(var policy:Object in policyes){
//								var policyName:String=policy["policyName"];
//								var policyType:String=policy["policyType"];
//								var tnlName:String=policy["tnlName"];
//								var srcIp:String=policy["srcIp"];
//								var desIp:String = policy["desIp"];
//								if(policyType=="begin"){
//									beginPolicyes.push(policy);
//								}
//							}
//							arr=new ArrayCollection(beginPolicyes);
//						}
//					});
//				}else{
//					DataHandleTool.qosCalculate.qosItemArr=[];
//					DataHandleTool.qosCalculate.qosStartArr=[];
//					__app.ipcore.physicsView.networkX.elementBox.forEachByBreadthFirst(function(item:IData):void{
//						if(item is StateNode){
//							var stateNode:StateNode=item as StateNode;
//							var device:Device=stateNode.getClient("device");
//							if(device!=null){
//								// 计算当前设备的qos
//								device.addQosList(DataHandleTool.qosCalculate);
//							}
//						}
//					});
//					DataHandleTool.qosCalculate.calculate();
//					var qosStartArr:Array=DataHandleTool.qosCalculate.qosStartArr;
//					var policyList:Array=[];
//					for each(var qosItem:QosItem in qosStartArr){
//						var po:Object=new Object;
//						po["policyName"]=qosItem.qosName;
//						po["srcIp"]=qosItem.qosSrcIp;
//						po["desIp"]=qosItem.qosdestIp;
//						po["qosItem"]=qosItem;
//						policyList.push(po);
//					}
//					arr=new ArrayCollection(policyList);
//				}
//			}
			/**
			 * 查找流策略
			 */
			public function queryPolicy():void
			{
				for(var i:int = 0;i<mydata.Alresult.length;i++)
				{
					var l:int = mydata.Alresult[i].length;
					if(mydata.Alresult[i][0]==g.selectedItem.leftnode&&mydata.Alresult[i][l-1]==g.selectedItem.rightnode)
					{
						var signPath:SignPath = new SignPath();
						signPath.signPath(mydata.Alresult[i],network);
					}
				}
				
//				var index:int=g.selectedIndex;
//				var beginPolicy:Object=g.selectedItem;
//				if(SdncUtil.cuProjectType=="test"){
//					DataHandleTool.drawLineByPolicyTnl(beginPolicy,__app.ipcore.physicsView.networkX);
//				}else{
//					DataHandleTool.drawLineByPolicyforReal(beginPolicy,__app.ipcore.physicsView.networkX);
//				}
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var opsIp:String = SdncUtil.opsIp;
				var url:String = "http://"+opsIp+"/topopathLog";
				navigateToURL(new URLRequest(url),"_blank");
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
	</fx:Declarations>
	
	<s:Image id="bk" source="@Embed('assets/imgs/navpanel/nav_panel_bg.png')"/>
	<s:Group id="content" left="11" top="2" width="{bk.width*0.8}" height="370">
		<s:Rect x="-10" width="319" height="403">
			<s:fill>
				<s:SolidColor color="0x283855" alpha="1"/>
			</s:fill>
		</s:Rect>
		<s:DataGrid id="g" width="289" height="360" color="0x000000" dataProvider="{mydata.Alpueue}"
					horizontalCenter="10" requestedRowCount="4" textAlign="left" verticalCenter="23">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn  headerText="源地址" dataField="leftname"  headerRenderer="com.huawei.sdnc.view.common.render.dgheaderReader">
						<s:itemRenderer>
							<fx:Component>
								<s:GridItemRenderer click="outerDocument.queryPolicy()" minWidth="60" height="25">
									<s:Label text="{data.leftname}" verticalCenter="0" />
								</s:GridItemRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
					
					<s:GridColumn  headerText="目的地址" dataField="rightname" headerRenderer="com.huawei.sdnc.view.common.render.dgheaderReader">
						<s:itemRenderer>
							<fx:Component>
								<s:GridItemRenderer click="outerDocument.queryPolicy()" minWidth="100" height="25">
									<s:Label text="{data.rightname}"  verticalCenter="0" />
								</s:GridItemRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
					<s:GridColumn  headerText="约束条件" dataField="conditio" headerRenderer="com.huawei.sdnc.view.common.render.dgheaderReader">
						<s:itemRenderer>
							<fx:Component>
								<s:GridItemRenderer click="outerDocument.queryPolicy()" minWidth="100" height="25">
									<s:Label text="{data.conditio}"  verticalCenter="0" />
								</s:GridItemRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
		<s:Button right="0" top="5" label="查看测试报告" color="#000000" click="button1_clickHandler(event)"/>
	</s:Group>
	<s:Image id="openBtn" right="8" top="188" rotation="180"
			 source="@Embed('assets/imgs/navpanel/button_trangle.png')"
			 click="doClickHandler(event)" buttonMode="true"/>
</s:Group>
